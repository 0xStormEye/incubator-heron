1. You can check the status of HDFS by running this command:
   kubectl exec -n {{ .Release.Namespace }} -it {{ template "heron.fullname" . }}-hdfs-nn-0 -- /usr/local/heron/bin/hdfs dfsadmin -report

2. You can list the yarn nodes by running this command:
   kubectl exec -n {{ .Release.Namespace }} -it {{ template "heron.fullname" . }}-yarn-rm-0 -- /usr/local/heron/bin/yarn node -list

3. Create a port-forward to the yarn resource manager UI:
   kubectl port-forward -n {{ .Release.Namespace }} {{ template "heron.fullname" . }}-yarn-rm-0 8088:8088

   Then open the ui in your browser:

   open http://localhost:8088

4. You can run included heron tests like this:
   kubectl exec -n {{ .Release.Namespace }} -it {{ template "heron.fullname" . }}-yarn-nm-0 -- /usr/local/heron/bin/heron jar /usr/local/heron/share/heron/mapreduce/heron-mapreduce-client-jobclient-{{ .Values.heronVersion }}-tests.jar TestDFSIO -write -nrFiles 5 -fileSize 128MB -resFile /tmp/TestDFSIOwrite.txt

5. You can list the mapreduce jobs like this:
   kubectl exec -n {{ .Release.Namespace }} -it {{ template "heron.fullname" . }}-yarn-rm-0 -- /usr/local/heron/bin/mapred job -list

6. This chart can also be used with the zeppelin chart
    helm install --namespace {{ .Release.Namespace }} --set heron.useConfigMap=true,heron.configMapName={{ template "heron.fullname" . }} stable/zeppelin

7. You can scale the number of yarn nodes like this:
   helm upgrade {{ .Release.Name }} --set yarn.nodeManager.replicas=4 stable/heron

   Make sure to update the values.yaml if you want to make this permanent.
