##
## Heron API server deployment
##
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "heron.fullname" . }}-apiserver
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: {{ template "heron.fullname" . }}-apiserver
---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ template "heron.fullname" . }}-apiserver
  labels:
    app: {{ template "heron.fullname" . }}-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: {{ template "heron.fullname" . }}-apiserver
  namespace: {{ .Values.namespace }}

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "heron.fullname" . }}-apiserver
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "heron.fullname" . }}-apiserver
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "heron.fullname" . }}-apiserver
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "heron.fullname" . }}-apiserver
      initContainers:
        # Wait until the zookeeper pods are up and running
        - name: {{ template "heron.fullname" . }}-init-container
          image: {{ .Values.image.repository }}/{{ .Values.image.tag }}
          command: ['sh', '-c', 'while true; do status=$(echo ruok | nc {{ .Release.Name }}-zookeeper 2181); if [ "$status" = "imok" ]; then break;  fi;  sleep 20;  done']
      containers:
        - name: {{ template "heron.fullname" . }}-apiserver
          image: {{ .Values.image.repository }}/{{ .Values.image.tag }}
          command: ["sh", "-c"]
          args:
            - >-
              heron-apiserver
              --base-template kubernetes
              --cluster {{ .Release.Name }}
              -D heron.statemgr.connection.string={{ .Release.Name }}-zookeeper:2181
              -D heron.kubernetes.scheduler.uri=http://localhost:8001
              -D heron.executor.docker.image={{ .Values.image.repository }}/{{ .Values.image.tag }}
              -D heron.class.uploader=com.twitter.heron.uploader.dlog.DLUploader
              -D heron.uploader.dlog.topologies.namespace.uri=distributedlog://{{ .Release.Name }}-zookeeper:2181/distributedlog
        - name: kubectl-proxy
          image: heron/kubectl:latest
          command: ["sh", "-c"]
          args:
            - >
              kubectl proxy -p 8001
---    
apiVersion: v1
kind: Service
metadata:
  name: {{ template "heron.fullname" . }}-apiserver
spec:
  selector:
    app: {{ template "heron.fullname" . }}-apiserver
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
  type: NodePort
